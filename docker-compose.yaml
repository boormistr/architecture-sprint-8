version: '3.8'

services:
  keycloak_db:
    image: postgres:14
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./postgres-keycloak-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - mynetwork

  keycloak:
    image: quay.io/keycloak/keycloak:21.1
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
      KC_DB_USERNAME: ${DB_USER}
      KC_DB_PASSWORD: ${DB_PASSWORD}
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    ports:
      - "8080:8080"
    depends_on:
      - keycloak_db
    networks:
      - mynetwork

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      API_URL: ${API_URL}
      REACT_APP_KEYCLOAK_URL: ${REACT_APP_KEYCLOAK_URL}
      REACT_APP_KEYCLOAK_REALM: ${REACT_APP_KEYCLOAK_REALM}
      REACT_APP_KEYCLOAK_CLIENT_ID: ${REACT_APP_CLIENT_ID}
    depends_on:
      - keycloak
      - reports_api
    networks:
      - mynetwork

  reports_api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: reports_api
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - keycloak
    networks:
      - mynetwork

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/build:/usr/share/nginx/html
    depends_on:
      - frontend
      - reports_api
    networks:
      - mynetwork


networks:
  mynetwork:
    driver: bridge